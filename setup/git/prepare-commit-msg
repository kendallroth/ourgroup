#!/bin/bash

# Verifies that branch name starts with a GitHub issue number (ie "9-feature"), and
#   automatically prepends commit message with issue number (ie "[#9]").
#
# Source: https://medium.com/bytelimes/automate-issue-numbers-in-git-commit-messages-2790ae6fe071

BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

# Ensure BRANCH_NAME is not empty and is not in a detached HEAD state (i.e. rebase).
#   SKIP_PREPARE_COMMIT_MSG may be used to disable this hook, while still allowing
#   other hooks to run.
if [ ! -z "$BRANCH_NAME" ] && [ "$BRANCH_NAME" != "HEAD" ] && [ "$SKIP_PREPARE_COMMIT_MSG" != 1 ]; then
  PREFIX_PATTERN='[0-9]{1,4}[_\-]'

  [[ $BRANCH_NAME =~ $PREFIX_PATTERN ]]

  PREFIX=${BASH_REMATCH[0]}
  PREFIX=${PREFIX::-1}
  PREFIX_IN_COMMIT=$(grep -c "\[#$PREFIX\]" $1)

  if ! [[ -n "$PREFIX" ]]; then
    echo "Branch name does not contain GitHub issue number"
    exit 1
  fi

  if ! [[ $PREFIX_IN_COMMIT -ge 1 ]]; then
    sed -i.bak -e "1s~^~[#$PREFIX] ~" $1
  fi
fi
